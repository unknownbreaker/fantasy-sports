(function(){"use strict";var F=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function U(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var P={exports:{}};(function(n,m){(function(a,x){x(n)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:F,function(a){if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)a.exports=globalThis.browser;else{const x="The message port closed before a response was received.",E=d=>{const S={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(S).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class v extends WeakMap{constructor(r,t=void 0){super(t),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const q=e=>e&&typeof e=="object"&&typeof e.then=="function",N=(e,r)=>(...t)=>{d.runtime.lastError?e.reject(new Error(d.runtime.lastError.message)):r.singleCallbackArg||t.length<=1&&r.singleCallbackArg!==!1?e.resolve(t[0]):e.resolve(t)},w=e=>e==1?"argument":"arguments",W=(e,r)=>function(g,...o){if(o.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${w(r.minArgs)} for ${e}(), got ${o.length}`);if(o.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${w(r.maxArgs)} for ${e}(), got ${o.length}`);return new Promise((A,l)=>{if(r.fallbackToNoCallback)try{g[e](...o,N({resolve:A,reject:l},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),g[e](...o),r.fallbackToNoCallback=!1,r.noCallback=!0,A()}else r.noCallback?(g[e](...o),A()):g[e](...o,N({resolve:A,reject:l},r))})},M=(e,r,t)=>new Proxy(r,{apply(g,o,A){return t.call(o,e,...A)}});let T=Function.call.bind(Object.prototype.hasOwnProperty);const y=(e,r={},t={})=>{let g=Object.create(null),o={has(l,s){return s in e||s in g},get(l,s,c){if(s in g)return g[s];if(!(s in e))return;let i=e[s];if(typeof i=="function")if(typeof r[s]=="function")i=M(e,e[s],r[s]);else if(T(t,s)){let b=W(s,t[s]);i=M(e,e[s],b)}else i=i.bind(e);else if(typeof i=="object"&&i!==null&&(T(r,s)||T(t,s)))i=y(i,r[s],t[s]);else if(T(t,"*"))i=y(i,r[s],t["*"]);else return Object.defineProperty(g,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(b){e[s]=b}}),i;return g[s]=i,i},set(l,s,c,i){return s in g?g[s]=c:e[s]=c,!0},defineProperty(l,s,c){return Reflect.defineProperty(g,s,c)},deleteProperty(l,s){return Reflect.deleteProperty(g,s)}},A=Object.create(e);return new Proxy(A,o)},C=e=>({addListener(r,t,...g){r.addListener(e.get(t),...g)},hasListener(r,t){return r.hasListener(e.get(t))},removeListener(r,t){r.removeListener(e.get(t))}}),H=new v(e=>typeof e!="function"?e:function(t){const g=y(t,{},{getContent:{minArgs:0,maxArgs:0}});e(g)}),R=new v(e=>typeof e!="function"?e:function(t,g,o){let A=!1,l,s=new Promise(p=>{l=function(u){A=!0,p(u)}}),c;try{c=e(t,g,l)}catch(p){c=Promise.reject(p)}const i=c!==!0&&q(c);if(c!==!0&&!i&&!A)return!1;const b=p=>{p.then(u=>{o(u)},u=>{let _;u&&(u instanceof Error||typeof u.message=="string")?_=u.message:_="An unexpected error occurred",o({__mozWebExtensionPolyfillReject__:!0,message:_})}).catch(u=>{console.error("Failed to send onMessage rejected reply",u)})};return b(i?c:s),!0}),Z=({reject:e,resolve:r},t)=>{d.runtime.lastError?d.runtime.lastError.message===x?r():e(new Error(d.runtime.lastError.message)):t&&t.__mozWebExtensionPolyfillReject__?e(new Error(t.message)):r(t)},L=(e,r,t,...g)=>{if(g.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${w(r.minArgs)} for ${e}(), got ${g.length}`);if(g.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${w(r.maxArgs)} for ${e}(), got ${g.length}`);return new Promise((o,A)=>{const l=Z.bind(null,{resolve:o,reject:A});g.push(l),t.sendMessage(...g)})},z={devtools:{network:{onRequestFinished:C(H)}},runtime:{onMessage:C(R),onMessageExternal:C(R),sendMessage:L.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:L.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},k={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return S.privacy={network:{"*":k},services:{"*":k},websites:{"*":k}},y(d,z,S)};a.exports=E(chrome)}})})(P);var $=P.exports;const f=U($),O={BASE_URL:"https://lm-api-reads.fantasy.espn.com",GAME:"ffl",SEASON:2025,SEGMENT:0};function I(n){const{BASE_URL:m,GAME:a,SEASON:x,SEGMENT:E}=O;return`${m}/apis/v3/games/${a}/seasons/${x}/segments/${E}/leagues/${n}`}function D(n){return`
    (async () => {
      try {
        const response = await fetch("${n}", {
          credentials: "include"
        });
        
        if (!response.ok) {
          throw new Error(\`HTTP error! status: \${response.status}\`);
        }
        
        const data = await response.json();
        return data;
      } catch (error) {
        throw new Error(\`Fetch failed: \${error.message}\`);
      }
    })();
  `}async function G(n){if(!n||n.trim()==="")throw new Error("League ID is required");try{const m=await f.tabs.query({active:!0,currentWindow:!0});if(m.length===0)throw new Error("No active tab found");const a=m[0],x=I(n),E=D(x);return(await f.tabs.executeScript(a.id,{code:E}))[0]}catch(m){throw new Error(`Failed to execute ESPN API fetch: ${m.message}`)}}const h={FETCH_LEAGUE_DATA:"ESPN_FETCH_LEAGUE_DATA",LEAGUE_DATA_SUCCESS:"ESPN_LEAGUE_DATA_SUCCESS",LEAGUE_DATA_ERROR:"ESPN_LEAGUE_DATA_ERROR"};async function B(n,m){if(n.type!==h.FETCH_LEAGUE_DATA)return null;console.log("ESPN API: Handling fetch request for league:",n.leagueId);try{const a=await G(n.leagueId);return{type:h.LEAGUE_DATA_SUCCESS,data:a,leagueId:n.leagueId,timestamp:new Date().toISOString()}}catch(a){return console.error("ESPN API: Fetch failed:",a),{type:h.LEAGUE_DATA_ERROR,error:a.message,leagueId:n.leagueId,timestamp:new Date().toISOString()}}}function j(){f.runtime.onMessage.addListener((n,m,a)=>{if(n.type===h.FETCH_LEAGUE_DATA)return B(n).then(a).catch(x=>{a({type:h.LEAGUE_DATA_ERROR,error:x.message,leagueId:n.leagueId})}),!0}),console.log("ESPN API: Message handler registered")}console.log("Background script loaded"),j(),f.runtime.onMessage.addListener((n,m,a)=>(console.log("Background received message:",n,"from:",m),n.type==="FROM_CONTENT"&&console.log("Message from content script:",n.data),!0)),f.tabs.onUpdated.addListener((n,m,a)=>{m.status==="complete"&&console.log("Tab loaded:",a.url)}),f.runtime.onInstalled.addListener(n=>{console.log("Extension installed:",n.reason),n.reason==="install"?console.log("First time installation"):n.reason==="update"&&console.log("Extension updated")})})();
